{"ast":null,"code":"var _jsxFileName = \"/Users/shuddhachowdhury/Desktop/react-sortable-list/my-sortable-list-app/src/SortableList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableList = () => {\n  _s();\n  const [items, setItems] = useState([{\n    id: 'receiveFile',\n    label: 'Receive File',\n    checked: false\n  }, {\n    id: 'statisticsAndChecks',\n    label: 'Statistics & Checks',\n    checked: false\n  }, {\n    id: 'columnValidation',\n    label: 'Column Validation',\n    checked: false\n  }\n  // Add more items here\n  ]);\n  const handleCheckboxChange = id => event => {\n    setItems(items.map(item => item.id === id ? {\n      ...item,\n      checked: event.target.checked\n    } : item));\n  };\n  const onDragStart = (event, index) => {\n    event.dataTransfer.setData(\"drag-item-index\", index);\n  };\n  const onDragOver = event => {\n    event.preventDefault();\n  };\n  const onDrop = (event, dropIndex) => {\n    event.preventDefault();\n    const dragIndex = parseInt(event.dataTransfer.getData(\"drag-item-index\"), 10);\n    if (dragIndex === dropIndex) return; // Prevent swapping if it's the same item\n\n    const newItems = [...items];\n    [newItems[dragIndex], newItems[dropIndex]] = [newItems[dropIndex], newItems[dragIndex]]; // Swap items\n\n    setItems(newItems);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      paddingLeft: '20px'\n    },\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      draggable: true,\n      onDragStart: e => onDragStart(e, index),\n      onDragOver: onDragOver,\n      onDrop: e => onDrop(e, index),\n      style: {\n        cursor: 'grab'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: item.checked,\n          onChange: handleCheckboxChange(item.id),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this),\n        label: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SortableList, \"9aj03tvtc24CAQH53iV4RbFMXL8=\");\n_c = SortableList;\nexport default SortableList;\nvar _c;\n$RefreshReg$(_c, \"SortableList\");","map":{"version":3,"names":["React","useState","Grid","Checkbox","FormControlLabel","Typography","jsxDEV","_jsxDEV","SortableList","_s","items","setItems","id","label","checked","handleCheckboxChange","event","map","item","target","onDragStart","index","dataTransfer","setData","onDragOver","preventDefault","onDrop","dropIndex","dragIndex","parseInt","getData","newItems","container","spacing","style","paddingLeft","children","xs","draggable","e","cursor","control","onChange","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shuddhachowdhury/Desktop/react-sortable-list/my-sortable-list-app/src/SortableList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Checkbox, FormControlLabel, Typography } from '@mui/material';\n\nconst SortableList = () => {\n    const [items, setItems] = useState([\n        { id: 'receiveFile', label: 'Receive File', checked: false },\n        { id: 'statisticsAndChecks', label: 'Statistics & Checks', checked: false },\n        { id: 'columnValidation', label: 'Column Validation', checked: false },\n        // Add more items here\n    ]);\n\n    const handleCheckboxChange = (id) => (event) => {\n        setItems(items.map(item => item.id === id ? { ...item, checked: event.target.checked } : item));\n    };\n\n    const onDragStart = (event, index) => {\n        event.dataTransfer.setData(\"drag-item-index\", index);\n    };\n\n    const onDragOver = (event) => {\n        event.preventDefault();\n    };\n\n    const onDrop = (event, dropIndex) => {\n        event.preventDefault();\n        const dragIndex = parseInt(event.dataTransfer.getData(\"drag-item-index\"), 10);\n        if (dragIndex === dropIndex) return; // Prevent swapping if it's the same item\n\n        const newItems = [...items];\n        [newItems[dragIndex], newItems[dropIndex]] = [newItems[dropIndex], newItems[dragIndex]]; // Swap items\n\n        setItems(newItems);\n    };\n\n    return (\n        <Grid container spacing={2} style={{ paddingLeft: '20px' }}>\n            {items.map((item, index) => (\n                <Grid item key={item.id} xs={12}\n                      draggable\n                      onDragStart={(e) => onDragStart(e, index)}\n                      onDragOver={onDragOver}\n                      onDrop={(e) => onDrop(e, index)}\n                      style={{ cursor: 'grab' }}\n                >\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={item.checked}\n                                onChange={handleCheckboxChange(item.id)}\n                                color=\"primary\"\n                            />\n                        }\n                        label={item.label}\n                    />\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default SortableList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}